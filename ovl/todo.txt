

- test ScreenNavigate because of ne BasClass Screen state handling
- use IsMobile, isOS, isTablet not from State but make a cached function

Because of an ovl overhaul following checks needs to be done:
- Initform now takes convertedvalue and uses getDisplayValue(..) for value
- we now have an previousConvertedValue on every field
- index.ts in index.html needs always to be from ovl/ovl
- listcontrol with demo
- innerEvent now should also work for textboxes and listcontrol
- the user form validate hook gets now convertedvalue if innerevent=false
- OvlConfig is now only source of truth (no window.xxxx in html script tag)
- reworked appDef so now OvlConfig should be used
- reworked OvlConfig so now actionsPaths are callbacks
- new css

X - TableAddRow replace manual to internal so using the action from outside doesn't need to think about it
X - form show resetting using an array (pop off and set to false)
X - demo timeentry validate. time ranges... setting back related validate msg
X - escape on dialogs should close them (check using the dismissed handler)

X - form show does not work as expected...see form show of dem timentry detailform. basically if a screen gets fadedout the formShowed property should be set to false
  if there are multiple forms on a screen? -> needs rethinking
X - document that Object.keys on an empty object can be critical for tracking. Because if keys get added afterwards the parent doesn't get notified
  
- create a remove error msg from linked field method helper
X - crete TableInit Method which clears data, tablestate, ... 
X - implement 0digits display for int datatype
X - simplify css styling for a whole column in table (set backgound opacity, needs another conatiner for the value becaue its opacity should be 1)
x - refactor mutiple validations in Forms -> just use pushError (an Array which gets initilise to empty before validation dfunctions)
X - chek filter selected rows in table... lookslike it hangs rhere with an overlay open or sos
X - check longpress toolbar functionality
X - check update check in offline mode

- Edit tabs
- Upload Control
- Link Control

? implement SASS precompiler (for eg. using compact buttons for navigation or not)

X - on android mobile try to enter a new translation in bigeditform....save button won't get activated...maybe related to bigeditform in general
  -> yeah its definitiv fishy...also on bigeditform on browser
X - Lookup: DisplayValueField not working
X- Lookup: If users enters code directly and it is a index data then returns "Keine EintrÃ¤ge gefunde..." which is wrong
  -> Maybe: Adjust FilterHitlist do also do a direct search if list is empty
X ==> Rethink both points: Maybe by adding the Code field as well to the lookups both are solved.

X - ParentCode GetList... Try add a new Parent in EditForm and save and reload

X - tabletesting u_decimal cannot be entered
X - check duplicate/copy table function
X - transaltion add doesn't add it to the internal list thus needs a refresh so the trans can be used
- fix all dialogs
X - remove overlay

X - set trap for parent in set handler. 

X - unify dialog and screens state . rethink tying of screen state (not the visible/isClosing stuff) to ovl.screens

X - go after the JSON.stringifies in Code... They are not more necessary because its handled by the proxifier now

X - dialog HeaderMenuTable... closing doesn not work. Maybe return a nothing so lit-html for sure makes nothing

X - dialog base class which takes care of setting a configurable state to visible false (maybe isClosing state is not needed)
X - this base class should be used from system dialogs (OkCancel) from Standalone Fomrs (Login) from Overlays

X - reimplement offline hooks
- Tab Feature for Edit
N - detailview as its own screen (configurable)
N - maybe consider push/pop active elementracker again...

X - simplify acctions export for custom
X - check sort if column is memo_fr, needs language param or some other fast logic
X - check timeentry
X - check itemgroup-item selection in form...there is smth missing
X - check the if-defined directive
X - refactor custom functions to actions again...
X - formafterrender-hooks need parent component as param (this.track....)
X - Check async issue with  action calling
  (tablerebuild gets calld before tabledata is loaded)
  ( you may enter translations screen to see issue ) 

X- Tabs for Detailview
  Define a set of tabs for edit and detailview
  Add viewTabs to def like
  tabs: {
   tab1: {translationKey: ...}
   tab2: {translationKey: ...}
   ... 
  }
  The order of this entries should also be the order of the tabs in the ui
  Then add those tab-keys to the fields
  columndef: {
    ...
    ...
    viewTab: "tab1"
    editTab: "tab1"
  }
X - TabContent-Hook
X - Custom Tabs


X - Rethink Translation Display. Maybe isntead of setting to "none" for translatable fields which are not in the ui use a different value.
  -> solved by having a separate translationVisibilty which will be used if UI lang !== col.language

X - Concept for Translations of Columns. Maybe add a "translatable: true" to the columndef. This would need some work on the backend as well
  And the Questions when working inside Translations-Table. Should there be all translations (Lets say as well Item-Translations) or just the one from the App UI?
  Well the more i think de easier it would be just to put like x_DE x_FR x_.. for the column Names and just show the one in table- and detailview which corresponds 
  to the current user language. Still those columns need to have a Indication in the ColumnDef which language Code it is. But thats super simple and fast :) 
  This would leave the translations as they are for the UI only. And doesn't need additional backend logic.
  For the Assets description we should always use a separate Text Column (Which could be translatable like indicated above as well) 

X - Currently implemented but missing refresh. Looks like visbleColumns Object doesn't get tgransfered correctly to childs. Need check. 
    -> Sequence of rendering is undefined, so no way to pass parent props. Its possibly due of async rendering (not sure)
    -> Solve by using a TableNeedsRfresh flag in state which repaints the whole table if needed

X - Check Focus Setting... In Live KaltAg you can see on the loginform after pasting in the username

X - Custom Column Functions
X - Custom Functions for Multiple Selected Rows

Configuration:
X - A "TableOnlyMobile" - visibility (Can be used to display aggregated data of a table only on mobile. Details are then visible as usual in detail view)


More Hooks:

X - Apply Hook and Class Styling Concept from TableHeader/TableRow to Detailview 
X - Apply Hook and Class Styling Concept from TableHeader/TableRow to Editviews 

X - Hook Field_%_TableRowRender. A Custom Renderer for row field in tableview
X - Hook Field_%_TableHeaderRender. A Custom Renderer for header field in tableview
X - Hook Field_%_ViewLabelRender. A Custom Renderer for label in detailview
X - Hook Field_%_ViewRender. A Custom Renderer for field in detailview

X - Hook ViewCaptionRender. A custom renderer for View Title
X - Hook EditCaptionRender. A custom renderer for Edit Title


X - Hook Field_%_EditLabelRender. A Custom Renderer for label in edit. 
X - Hook Field_%_EditRender. A Custom Renderer for field in edit. Must fire ovlfocussout and ovlchange events to trigger validation
X - Hook FormViewRender. A Custom Renderer for the full Detail view content (Maybe prepare a codesandbox to test those...)

X - Rearrange customFunctions content into multiple files (its super big covering a lot of tests)

Controls:
X  - type Checkbox

X - Offline Save/Delete:
- if  a post (all xhr calls are in the same post action) fails (try catch?) then the payload of that post action will be saved somehow
  its important to save those post payloads into a list sorted by execution time (also hand over that execution time then on execution. it can be used as the eg. Docdate when creating documents)
  added rows should get a key like ovl_offline+uuid and related childs added can be tracked because of next feature

X (needs to be handled with the custom longpoll)- Change Tracking:
- long poll which can be configured with tablenames to track
  the result of the long poll will be pushed back to a state object
  now components interested in server changes just need to track this state

